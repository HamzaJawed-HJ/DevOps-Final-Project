name: Build & Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up QEMU (for buildx)
        uses: docker/setup-buildx-action@v3.11.1

      - name: Login to Docker Hub
        uses: docker/login-action@v3.6.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/node-selfheal-app:latest

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e

            echo "ðŸš€ Starting deployment on EC2..."

            # Step 1: Navigate or create the project folder
           
            mkdir -p ~/self-healing-app
            cd ~/self-healing-app

            # Step 2: Pull latest docker-compose.yml (optional: if you store it in repo)
            # In this approach, we assume docker-compose.yml is in Docker image repo or manually uploaded once.
            # echo "ðŸ“¦ Copying docker-compose.yml from repo to EC2 folder"
            # cp ~/runner/work/DevOps-Final-Project/DevOps-Final-Project/docker-compose.yml ~/self-healing-app/

                # Step 2: Copy docker-compose.yml (pulling image from Docker Hub)
            echo "ðŸ“¦ Updating docker-compose.yml..."
            cat > docker-compose.yml <<'EOF'
            version: "3.8"

            services:
              app:
                image: hamzajawed/self-healing-node-app:latest  # Replace with your actual Docker Hub image
                container_name: self_healing_node_app
                restart: always
                ports:
                  - "3000:3000"
                env_file:
                  - .env
            EOF


            # Step 3: Create or update .env file with secrets
            cat > .env <<'EOF'
            MONGO_URI=${{ secrets.MONGO_URI }}
            PORT=3000
            EOF

            echo "âœ… .env file updated"

            # Step 4: Pull latest image from Docker Hub
            docker-compose pull

            # Step 5: Stop old containers (if running)
            docker-compose down || true

            # Step 6: Start containers with restart policy
            docker-compose up -d

            echo "âœ… Deployment complete. App running on EC2: http://${{ secrets.EC2_HOST }}:3000"
